<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="7" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-22T23:09:51 PKT" name="Suite" finished-at="2025-04-22T23:13:29 PKT" duration-ms="217536">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.LoginErrorValidation()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" name="LoginErrorValidation" class="samautomation.tests.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" name="submitOrder" class="samautomation.tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-04-22T23:09:51 PKT" name="Submit Order Test" finished-at="2025-04-22T23:12:07 PKT" duration-ms="136087">
      <class name="samautomation.tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:09:52 PKT" name="launchApplication" finished-at="2025-04-22T23:10:09 PKT" duration-ms="16978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:10:09 PKT" name="submitOrder" data-provider="getData" finished-at="2025-04-22T23:10:33 PKT" duration-ms="23945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=8b@2$A2Dy.Ua6Z@, product=ZARA COAT 3, email=samina.kausar.professional@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:10:33 PKT" name="tearDown" finished-at="2025-04-22T23:10:33 PKT" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:10:33 PKT" name="launchApplication" finished-at="2025-04-22T23:10:48 PKT" duration-ms="15311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:10:48 PKT" name="submitOrder" data-provider="getData" finished-at="2025-04-22T23:11:13 PKT" duration-ms="24407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=8b@2$A2Dy.Ua6Z@, product=ZARA COAT 3, email=samina.kausar.professional@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:11:13 PKT" name="tearDown" finished-at="2025-04-22T23:11:13 PKT" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:11:13 PKT" name="launchApplication" finished-at="2025-04-22T23:11:28 PKT" duration-ms="15383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest(java.util.HashMap)[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:11:28 PKT" name="OrderHistoryTest" data-provider="getData" finished-at="2025-04-22T23:11:38 PKT" depends-on-methods="samautomation.tests.SubmitOrderTest.submitOrder" duration-ms="10177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=8b@2$A2Dy.Ua6Z@, product=ZARA COAT 3, email=samina.kausar.professional@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:11:38 PKT" name="tearDown" finished-at="2025-04-22T23:11:39 PKT" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:11:39 PKT" name="launchApplication" finished-at="2025-04-22T23:11:54 PKT" duration-ms="15959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest(java.util.HashMap)[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:11:54 PKT" name="OrderHistoryTest" data-provider="getData" finished-at="2025-04-22T23:12:07 PKT" depends-on-methods="samautomation.tests.SubmitOrderTest.submitOrder" duration-ms="12099" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=8b@2$A2Dy.Ua6Z@, product=ZARA COAT 3, email=samina.kausar.professional@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:samautomation.tests.SubmitOrderTest@6155d082]" started-at="2025-04-22T23:12:07 PKT" name="tearDown" finished-at="2025-04-22T23:12:07 PKT" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- samautomation.tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
    <test started-at="2025-04-22T23:12:09 PKT" name="Error Validations Test" finished-at="2025-04-22T23:13:29 PKT" duration-ms="80291">
      <class name="samautomation.tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:12:09 PKT" name="launchApplication" finished-at="2025-04-22T23:12:24 PKT" duration-ms="15585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:12:24 PKT" name="LoginErrorValidation" finished-at="2025-04-22T23:12:34 PKT" duration-ms="9471" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Login Successfully] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Login Successfully] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at samautomation.tests.ErrorValidationTest.LoginErrorValidation(ErrorValidationTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:12:34 PKT" name="tearDown" finished-at="2025-04-22T23:12:34 PKT" duration-ms="404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:12:34 PKT" name="launchApplication" finished-at="2025-04-22T23:12:50 PKT" duration-ms="16336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:12:50 PKT" name="LoginErrorValidation" finished-at="2025-04-22T23:13:01 PKT" duration-ms="10708" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found in the current frame
  (Session info: chrome=135.0.7049.96)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.30.0', revision: '509c7f17cc*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.4', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3d1c9e2cea6a353d29b4fa81a9df2353, getElementText {id=f.0CF7A83D9F271CAC411A7645F94728F8.d.93DA64674328BE29AD7DFF852D590C13.e.35}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.96, chrome: {chromedriverVersion: 135.0.7049.95 (de2eb485a195..., userDataDir: /var/folders/ck/tc5y2b4d105...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62199}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:62199/devtoo..., se:cdpVersion: 135.0.7049.96, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on mac (3d1c9e2cea6a353d29b4fa81a9df2353)] -> css selector: [class*='flyInOut']]
Session ID: 3d1c9e2cea6a353d29b4fa81a9df2353]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame
  (Session info: chrome=135.0.7049.96)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.30.0', revision: '509c7f17cc*'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '15.4', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3d1c9e2cea6a353d29b4fa81a9df2353, getElementText {id=f.0CF7A83D9F271CAC411A7645F94728F8.d.93DA64674328BE29AD7DFF852D590C13.e.35}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.96, chrome: {chromedriverVersion: 135.0.7049.95 (de2eb485a195..., userDataDir: /var/folders/ck/tc5y2b4d105...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62199}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:62199/devtoo..., se:cdpVersion: 135.0.7049.96, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on mac (3d1c9e2cea6a353d29b4fa81a9df2353)] -> css selector: [class*='flyInOut']]
Session ID: 3d1c9e2cea6a353d29b4fa81a9df2353
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:191)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy16.getText(Unknown Source)
at samautomation.pageobjects.LandingPage.getErrorMessage(LandingPage.java:57)
at samautomation.tests.ErrorValidationTest.LoginErrorValidation(ErrorValidationTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:13:02 PKT" name="tearDown" finished-at="2025-04-22T23:13:02 PKT" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:13:02 PKT" name="launchApplication" finished-at="2025-04-22T23:13:15 PKT" duration-ms="12932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:13:15 PKT" name="ProductErrorValidation" finished-at="2025-04-22T23:13:29 PKT" duration-ms="13919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:samautomation.tests.ErrorValidationTest@4ce7fffa]" started-at="2025-04-22T23:13:29 PKT" name="tearDown" finished-at="2025-04-22T23:13:29 PKT" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- samautomation.tests.ErrorValidationTest -->
    </test> <!-- Error Validations Test -->
  </suite> <!-- Suite -->
</testng-results>
